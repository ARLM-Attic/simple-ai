///////////////////////////////////////////////////////////
//  AICharacters.cs
//  Implementation of the Class AICharacters
//  Generated by Enterprise Architect
//  Created on:      20-mar-2008 23:34:24
//  Original author: piotrw
///////////////////////////////////////////////////////////




using System.Collections.Generic;
namespace SimpleAI {
	/// <summary>
	/// Container for all AIActor classes
	/// </summary>
	public class AIActors : IAISequencer{

        protected static int iSequNumber = 0;
        private List<AIActor> characters;
        private int initialCapacity = 25;
       
        public int NextSequenceNumber
        {
            get
            {
                return ++iSequNumber;
            }
        }

        public AIActor this[int index]
        {
            get
            {
                return characters[index];
            }
        }

		public AIActors(){
            characters = new List<AIActor>(initialCapacity);
		}

        public AIActors(int initialCapacity)
        {
            this.initialCapacity = initialCapacity;
            characters = new List<AIActor>(initialCapacity);
        }

        public int Count
        {
            get { return characters.Count; }
        }

        public int Capacity
        {
            get { return characters.Capacity; }
        }

        public void Add(ref AIActor newCharacter)
        {
            // Add default name if needed
            if (newCharacter.Name == "")
            {
                newCharacter.Name = "AIActor #" + NextSequenceNumber;
            }
            characters.Add(newCharacter);
        }

		~AIActors(){

		}

		public virtual void Dispose(){

		}

	}//end AICharacters

}//end namespace SimpleAI